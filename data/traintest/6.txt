
<h2>What is a &quot;good&quot; under the UCC?</h2>
<p>Article 2-105(1) says: &quot;Goods&quot; means all things (including specially manufactured goods) which are <strong>moveable</strong> at the time of <strong>identification</strong> to the contract for sale other than money in which the price is to be paid, investment securities and things in action. Thus, under Article 2, there are two tests for &quot;goods:&quot; a substance test - <strong>moveability</strong>; and a timing test - <strong>identification</strong>. Computer programs <strong>do not fit under either one</strong>.</p>
<h3>Moveablility</h3>
<p>Is a computer program moveable? Several courts and commentators have thought so. But remember, <strong>we are not talking about the copy</strong> of the computer program; we are talking about the computer program itself. That is what these authorities say is a &quot;good.&quot;</p>
<p>So try this experiment. Log on to the Linux Web site and download a copy of LIuqx onto your hard disc. If the learned authorities are right - if a computer program becomes a tangible, moveable good when it is embodied in a copy - then LiNUX the computer program has migrated to your hard disc and is no longer available on the Linux Web site.</p>
<p>It should have moved. But wait. Go back to the Linux Web site and check it out. LiNux is still there, waiting to be copied. It has not moved. In fact, it is now in two places at the same time. How can this be?</p>
<p>A computer program is supposed to be moveable. This means travelling from one place to another. How can a moveable computer program be in two places at the some time?</p>
<p>Try another test. Run to Anchorage and start distributing copies of LINuX without complying with the GNU Public License; infringe the copyright.3 6 Now run to Miami and do the same thing. If LINUX the computer program is indeed moveable in the marketplace then it stands to reason that it cannot be in two different marketplaces at the same time. You cannot sue for the same injury to the same car in two different places. Moving from point A to point B necessarily means leaving point A. If you believe this about LINUX, be prepared for a rude awakening. Like things in action, which by definition are not goods, a copyright in a computer program is an intangible interest, which may be enforced simultaneously everywhere. These hypothetical experiments are tongue-in-cheek, but the point is not. A copy of a computer program may be tangible and moveable, but not the computer program - the copyrightable work. <strong>The computer program is intangible, immovable, and simultaneously everywhere</strong>. Those that argue otherwise make the junior's mistake of confusing the copy with the copyright.</p>
<h3>Identification</h3>
<p>Now let's look at the identification test.</p>
<p>Is the software identified <strong>to</strong> the contract or <strong>by</strong> the contract?</p>
<p>Again, consider LINux. If the computer program LINUX is a good, then what exactly is it that is identified to the contract when you acquire a CD at CompUSA? If LINUx is a good, then under Article 2-401, title to LINUX the computer program must necessarily pass by operation of law. But &quot;title&quot; to LINUX would mean the entire, worldwide, perpetual copyright, while the GNU Public License only grants a limited, non-exclusive license. LINUX the computer program is not identified to the contract; rather the object of the contract - the scope of the grant - is identified by the license. Goods, being tangible, can be identified by the senses apart from the contract and must be identified to it. Copyright interests, being intangible, are only delimited by words in the contract. &quot;But,&quot; you say &quot;I left CompUSA with a CD. This is a tangible copy. Surely this is the good identified to the contract.&quot; Maybe, but beside the point. The issue is not whether the blank CD is identified, but whether the computer program embodied on the CD is also identified . 8 7 Article 2-501(1) is explicit that identification must occur no later than: (i) for existing goods, when the contract is made; or (ii) for future goods, when they are designated as the&nbsp;goods to which the contract refers.3 Now, when you took the CD home, you probably copied the computer program onto your hard drive. That hard drive copy did not exist when you stood at the cash register. What existed, what was necessarily the only object that could be identified to the contract under Article 2-501, was the copy of the computer program in the CD case. You can argue that the copy on your hard drive was a future good, but did the store clerk really designate that payment was not for the CD in your hand but for the hard disk copy you might make later on? I think not. That means that under Article 2-501, the copy that was made on your hard drive could not have possibly been identified to the contract. So if the copy on your hard drive is the computer program that does not &quot;work,&quot; that means - but you get the point. And what happens when a copy is downloaded over the Internet? Kaplan v. Cablevision of Pennsylvania, Inc. held that the delivery of cable television programming signals was not a &quot;transaction in goods&quot; under the UCC because programming signals are not &quot;fairly identifiable as movables before the contract is performed.&quot;39&deg; Digital signals passed by electronic means over the Internet to download copies of computer programs should also not qualify as identified goods. Article 2 is about the sale of wares - tangible, moveable hard goods identifiable by the senses. Computer programs are intangible products of the mind that are immovable and simultaneously everywhere. They are not delimited by the senses but described in words. They are not identified to a contract but by a contract. Yet the Article 2 eschatology would have it that these intangibles nonetheless descend into physical form where they lose forever their incorporeal essence to become only dense matter. Tales of angels that take on human form and forfeit their immortality make engaging movies and wonderful stories. But such imaginings belong to myth, not law.</p>
<h2>A Software License is Not a &quot;Sale&quot;</h2>
<p>Article 2-105(1) says that Article 2 applies to &quot;transactions&quot; in goods, not just &quot;sales.&quot; Does this mean that Article 2 can apply to software licenses because they are transactions? An interesting distinction, but pointless. Article 2 deals with, and the definition of</p>
<p>goods is cast in terms of, a contract of sale.3 91 Article 2-106(1) says: In this Article unless the context otherwise requires, &quot;contract&quot; and &quot;agreement&quot; are limited to those relating to the present or future sale of goods. &quot;Contract for sale&quot; includes both a present sale of goods and a contract to sell goods at a future time. A &quot;sale&quot; consists of the passing of title from the seller to the buyer for a price (Section 2401). A &quot;present sale&quot; means a sale which is accomplished by the making of the contract.3 92 The inclusion of transactions within Article 2-105(1) is meant to cover a limited number of familiar situations which are not technically sales but are nonetheless are covered in the statute, most particularly consignments.3 93 It does not sweep every commercial transaction involving goods into Article 2. Novemedix, Ltd. v. NDM Acquisition Corp.394 made that point. The case involved a settlement agreement to a patent infringement suit, which called for the delivery of the allegedly infringing inventory to the patent owner. When the inventory proved to be defective as well as infringing, the irate patent owner brought suit for breach of the implied warranty of merchantability under Article 2. To the patent owner, this was surely a &quot;transaction in goods&quot; within the scope of Article 2. The Federal Circuit saw it otherwise: Many commercial transactions are not governed by Article 2 of the UCC: sale of land or securities, assignment of a contract right, or granting a license under a patent or copyright, to name just a few. The mere fact that title to Article 2 goods changes hands during one of these transactions does not by that fact alone make the transaction a sale of goods .... Here, the mere fact that the parties' settlement agreement includes the transfer of personal property in its provisions does not make it a simple sale of goods (slippers) for a price (release of a legal claim) .... The settlement agreement is no more a contract for the sale of slippers than it is a licensing agreement for NDM's patents. In fact, it is neither exclusively; it is a mixed contract .... 395</p>
<p>Novemedix indicates the real reason for trying to apply Article 2 to software transactions: to impose an implied warranty of merchantability or fitness. But these implied warranties only apply to a &quot;contract&quot; of a sale,396 not any &quot;transaction&quot; in goods. A sale means &quot;the passing of title from the seller to the buyer for a price.&quot; 97 In a non-exclusive software license, there is as a matter of federal law no transfer of copyright ownership398 to begin with, hence no sale of the computer program ever occurs. There may be a sale of the CD embodying the computer program, but not the licensed computer program. In an exclusive license, there is a transfer of copyright ownership, but this is not a passing of title in the Article 2 sense due to the numerous ownership interests retained by the licensor.39 Think again of LINUX. This license is non-exclusive. A customer who acquires a copy of LINux does not acquire any ownership interest in the computer program, so the legally separate license from the Linux organization cannot be a sale of goods even under Article 2's own definitions.&quot; It seems so counter-intuitive. The customer is after all walking off with a physical object - the CD and the packaging. It also seems counter-intuitive that the Sun does not orbit the Earth. But looking beyond facade to fact yields the conclusion that neither intuition is correct.40 1 A software transaction is a license of a computer program, not a sale of goods. Some commentators say that software vendors call a software transaction a license to avoid the first sale doctrine,4 but this is incorrect. These commentators think that a software transaction can only be a sale or a license, one or the other, take it or leave it. They fail to understand that software transactions have two independent components, one of which might involve the sale of a copy, but the other part, the real substance, involves a license of</p>
<p>computer information. Software vendors call their transactions licenses to avoid inappropriate application of Article 2 in ways that ignore the license, or worse, subject the license to the default rules in Article 2. Many programs, like LIwux, give a licensee greater rights than are allowed by the first sale doctrine, and the licensee needs the license to enable that expanded use. Licensors correctly identify software transactions as licenses because that is exactly what they are.</p>
<p><br /></p>
<h2>&quot;Predominant Purpose&quot; is the Wrong Test</h2>
<p>Despite these conceptual discontinuities, many authorities still try to justify applying Article 2 to software transactions under the predominant purpose test. The argument is that, despite the licensee's paramount goal of obtaining the legal rights in the computer program, since somewhere along the way a use-enabler like a CD floated by, the predominant purpose of the deal is really a sale of goods. The upshot of this reasoning is that terms in the license unpalatable at least to the licensee, typically a disclaimer of warranties, are ignored. As the next section will discuss, this has led to frantic contortions as courts and commentators engage in a desperate struggle to fit the facts into this image. One can imagine Medieval astrologers feeling the same desperation as they tried to plot their patrons' horoscopes using the imagery from Ptolemic astronomy. In fact, however, predominant purpose is simply the wrong test. It attempts to draw a dividing line along a single conceptual continuum from services to sales, with services at one end being out of Article 2 and sales at the end being in. This linear continuum, however, exists solely along a state law axis. State law can presume that commercial transactions only fit somewhere along this line, so the question is either-or, one or the other, entirely within Article 2 for all purposes, or entirely without. But interests in copyrightable computer programs are determined by federal law. This federal interest is orthogonal to the single extension between services and goods and requires analysis in an entirely new dimension. Predominant purpose is inadequate for this multi-dimensional approach. The necessary and proper test is statutory conformity: do the underlying policies and purposes of Article 2 when taken as a whole conform to the requirements of the Copyright Act when applied to software transactions? The Official Comments to Article 1-102 agree this is the correct approach:</p>
<p>[T]he proper construction of the Act requires that its interpretation and application be limited to its reason ... The Act should be construed in accordance with its underlying purposes and policies. The text of each section should be read in light of the purpose and policy of the rule or principle in question, as also of the Act as a whole, and the application of the language should be construed narrowly or broadly, as the case my be, in accordance with the purposes involved.403 This test demands a more rigorous analysis that simply reading the definition of goods in splendid isolation. It requires reading the whole of Article 2 section by section to determine whether the way it implements its transactional model conforms with the policies and purposes of the Copyright Act. The UCC itself mandates that it be interpreted as a whole in a manner that promotes its underlying purposes and policies,4&deg;4 not in piecemeal fashion. Courts applying the predominant purpose test to software transactions simply ignore this requirement. Instead, once they decide to that the transaction is within Article 2, they pick and choose the specific provision they want, such as the statute of frauds or an implied warranty. They do not apply Article 2 as a true code - an integrated, systematic, preemptive whole - but as a grab bag of disconnected statutes out for the plucking. In application, the predominant purpose test uses rote comparison of the cost of the copy to the amount of the license fee in order to fix the transaction along the services/goods continuum solely on the basis of price.4 5 But this allows too easy manipulation to subvert the federal scheme. If a purveyor of copies of LINUX allocates 1R to the license and $19.99 to the copy, does this mean one can now ignore Section 202 and treat the sale of the copy as granting a copyright license? What if the allocation is 49% to the license and 51% to the copy? Still a sale of goods? What about 51% license and 49% copy? Since the value of a blank CD is typically pennies, would it not be appropriate to allocate 1% to the value of the tangible CD and 99% to the value of the intangible right to use the computer program in any case? Determining whether a transaction is inside or outside Article 2 merely by moving the price toggle along the sales-service slide bar both abuses copyright law and disgraces the interconnected structure of</p>
<h2>What Law if Not Article 2?</h2>
<p>So what contract law does apply to software transactions? If some contract law applies to software transactions, and that law cannot be Article 2, then the only candidate left, absent UCITA, is the common law of contracts. Common law lacks many benefits of Article 2. It is not tailored to software transactions specifically; it does not provide a comprehensive set of gap-filler rules; it is not uniform among the states; even within a state it is often scattered among a daunting array of statutes and court decisions; and its rigid, formal rules are not adaptable to rapid change. Moreover, both common law and current Article 2 have no provisions to deal with the explosive growth of e-commerce, including click-on contracts, digital authentication, Web-based delivery, or bargaining through electronic agents to name a few. Nonetheless, unless and until a state adopts UCITA, it is all there is.4 06 This analysis has particular importance in mass market software transactions, especially those involving &quot;shrinkwrap&quot; licenses. Use of shrink wrap licenses has generated considerable discussion. Two cases, Step-Saver Data Systems, Inc. v. Wyse Technology4 7 and ProCD, Inc. v. Zeidenberg,4m &deg; are usually at the heart of the debate. In Step-Saver, a software vendor supplied prepackaged software with a shrink-wrap license. The customer ordered the software over the phone, then sent a followed-up purchase order detailing the items, price, shipment and payment terms. In response, the vendor sent a confirming invoice and shipped the software with a shrink-wrap license disclaiming all warranties. The action was, surprise, for breach of warranty. The parties agreed to let Article 2 govern the transaction, 4&deg;9 and on this basis the court applied the &quot;battle of the forms&quot; rule in Article 2-207. Under this rule, held the court, the contract .arose with the exchange of purchase order and invoice, so the warranty disclaimer in the shrink-wrap did not become part of the contract, because the customer did not accept it.410</p>
<p>ProCD involved a database of telephone numbers on CD-ROM, available in both a consumer version and, for a higher price, a commercial version. A shrink-wrap license limited the consumer version to non-commercial use only. Zeidenberg purchased a consumer version and made it available to commercial users over the Internet. He claimed, in reliance on Step-Saver, that the shrink-wrap license was unenforceable. The ProCD Court disagreed. Unlike Step-Saver, there was only one form, not an exchange of forms, so Article 2-207 did not apply. The court believed that the operative section was Article 2-204(1): &quot;A contract may be made in any manner sufficient to show agreement, including conduct by both parties which recognizes existence of a contract.&quot; ProCD had structured its offer to be accepted by the buyer acknowledging the license terms when it loaded the software and began using it. This created an enforceable contract on the terms of the license. Any differences in these decisions involves applying Article 2 to mass market software transactions. Both decisions, however, agree on the result under common law: a shrink-wrap license is fully enforceable under the &quot;last shot&quot; rule. At common law, an acceptance must be absolute and unqualified; any variation from the offer is a rejection and new counter-offer.4 ' As Step-Saver explained: Under the common law, . . . an acceptance that varied any term of the offer operated as a rejection of the offer, and simultaneously made a counter offer. This common law formality was known as the mirror image rule, because the terms of the acceptance had to mirror the terms of the offer to be effective. If the offeror proceeded with the contract despite the differing terms of the supposed acceptance, he would, by his performance, constructively accept the terms of the &quot;counteroffer,&quot; and be bound by its terms. As a result of these rules, the terms of the party who sent the last form... would become the terms of the parties' contract. This result was known as the &quot;last shot rule.&quot;412 This means that when the copies of the software arrive with the</p>
<p>shrinkwrap license, at common law the shrink-wrap constitutes a counter-offer, which the licensee then accepts by using the software.413 The shrink-wrap license is then enforceable in all of its terms. 414 The result is critical to protect consumers. In Step Saver, the court acknowledged that without the shrinkwrap license, the licensee could face a claim of copyright infringement. It found no infringement in that case, however, because the copyright owner, seizing defeat from the jaws of victory, acknowledged an implied license authorizing the licensee's use.415 But this result does not apply across the board. Consider LINux. The GNU License specifically conditions any exploitation of the copyright on enforceability of. the license and the waiver of warranties., If this shrinkwrap were invalid, one would never get to the question of breach of warranty, because the sale of the copy to the licensee in the first instance was unauthorized, the &quot;first sale&quot; and &quot;computer use&quot; privileges would be inapplicable, and the licensee's act of loading the copy onto a hard drive would be an infringement. Many critics object to UCITA because they maintain it validates mass market shrink wrap licenses that would otherwise be unenforceable under Article 2. This reasoning is unsound. The correct analysis is that shrinkwrap licenses are fully enforceable in</p>
<p>all particulars under long-standing common law contract rules. Far from validating otherwise unenforceable shrink-wrap licenses, UCITA imposes procedural limits on their use to ensure meaningful disclosure and assent in a ways suited to modem commerce. Courts have finally begun to face whether Article 2 is compatible with the Copyright Act when applies to software transactions. Given the force with which the copyright critics have raised the preemption issue of late, there is little doubt this rivulet will become a torrent. When the issue is confronted head-on, it is hard to imagine a modem court continuing to apply &quot;sales of goods&quot; imagery to software transactions when the Copyright Act tears the heart out of so much of Article 2.</p>
<p><br /></p>